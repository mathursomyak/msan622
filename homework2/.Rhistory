library(ggplot2)
data(movies)
# MOVIES DATA #
#==============
movies1 <- subset(movies,budget>0) #filter out movies with a negative budget
View(movies1)
movies1 <- subset(movies1,is.na(mpaa)==F)
View(movies1)
movies1$mpaa.levels
movies1$mpaa
movies1 <- subset(movies1,(mpaa)!='')
View(movies1)
ggplot(data=movies1, aes(x=budget,
y=rating,
color=as.factor(mpaa)
)) +
geom_point()
ggplot(data=movies1, aes(x=budget,
y=rating,
color=as.factor(mpaa)
)) +
geom_point(alpha = 0.5,position="jitter")
library(shiny)
runApp()
save.image("~/GitHub/msan622/homework2/idk what this is.RData")
setwd("~/GitHub/msan622/homework2")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
endApp()
quit()
getDataShapedUp <- function(){
data(movies)
movies1 <- subset(movies,budget>0) #filter out movies with a negative budget
movies1 <- subset(movies1,(mpaa)!='') #filter out movies without an mpaa rating
genre <- rep(NA, nrow(movies1))
count <- rowSums(movies1[, 18:24])
genre[which(count > 1)] = "Mixed"
genre[which(count < 1)] = "None"
genre[which(count == 1 & movies1$Action == 1)] = "Action"
genre[which(count == 1 & movies1$Animation == 1)] = "Animation"
genre[which(count == 1 & movies1$Comedy == 1)] = "Comedy"
genre[which(count == 1 & movies1$Drama == 1)] = "Drama"
genre[which(count == 1 & movies1$Documentary == 1)] = "Documentary"
genre[which(count == 1 & movies1$Romance == 1)] = "Romance"
genre[which(count == 1 & movies1$Short == 1)] = "Short"
movies1$genre <- genre
return(movies1)
}
View(getDataShapedUp())
runApp()
library(shiny)
shinyServer(function(input, output) {
output$scatterPlot <- renderPlot({
ggplot(data=movies1, aes(x=budget,
y=rating,
color=as.factor(mpaa))) +
geom_point(alpha = input$obs ,position="jitter")
})
})
runApp()
runApp()
runApp()
options(error = browser)
runApp()
